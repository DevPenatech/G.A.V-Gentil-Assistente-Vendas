# docker-compose.yml
services:
  db:
    image: postgres:15
    container_name: bot_postgres_db_funcional
    restart: always
    env_file:
      - .env
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      # <<< CORREÇÃO AQUI: Corrigido o nome da variável para POSTGRES_USER e POSTGRES_DB >>>
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis_funcional
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis_data:/data

  app:
    container_name: bot_python_app_funcional
    build: .
    ports:
      - "8081:8080"
    volumes:
      - ./IA:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env

  chatweb:
    container_name: bot_react_chatweb
    restart: always
    build:
      context: ./chatweb  
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./chatweb/src:/app/src
      - /app/node_modules
    depends_on:
      - app

volumes:
  postgres_data:
  redis_data: